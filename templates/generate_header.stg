
header(vars, className) ::= <<
// Generated Header 

#include "Environment.hpp"
#include "DataTypes.hpp"

class $className$
{
private:
    int next_step = 0;
	$vars:decl_lvar();separator="\n"$

    struct Result
    {
	    $vars:decl_res_var();separator="\n"$
    } cached_result;

    std::ostream& print(std::ostream& os, int nesting);

    friend class Ancestor;

    bool bind(Environment& env);

public:
    $className$($vars:parm_lvar();separator=", "$);
    void reset();

    bool step(Environment& env, int& var_counter);

    // TODO: Following is dummy function, remove:
    int run();
};

>>

decl_lvar(v) ::= <<lvar<Person> $v$;>>
decl_res_var(v) ::= <<Person $v$;>>

parm_lvar(v) ::= <<lvar<Person> $v$>>
